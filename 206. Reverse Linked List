# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        stack = []
        n = head
        while n != None:
            stack.append(n.val)
            n = n.next
        dummy = ListNode()
        p1 = dummy
        while len(stack) > 0:
            p1.next = ListNode(stack.pop())
            p1 = p1.next
        return dummy.next
